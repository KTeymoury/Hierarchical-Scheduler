import json
from pathlib import Path

def export_placement_map(placement_map:dict, output_path):
    '''
    Exports the placement map generated by Scenario class to a YAFS compatible json file
    '''
    path = Path(output_path)
    path.parent.mkdir(parents=True, exist_ok=True)
    result = []
    for app in placement_map:
        for module, device in placement_map[app]:
            result.append({'app': app, 'module_name': module, 'id_resource': device})
    
    with open(path, 'w') as f:
        f.write(json.dumps({'initialAllocation': result}))


def import_placement_map(input_path):
    '''
    Import a YAFS compatible json file and convert it to Scenario placement map
    '''
    path = Path(input_path)
    if not path.is_file():
        raise Exception(f'No file found at:\n{input_path}')
    mapping = ''
    with open(input_path, 'r') as f:
        mapping = json.load(f)
    result = {}
    for item in mapping['initialAllocation']:
        if item['app'] in result:
            result[item['app']].append((item['module_name'], item['id_resource']))
        else:
            result[item['app']]= [(item['module_name'], item['id_resource'])]
    for key in result:
        result[key] = tuple(result[key])
    return result
